{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MMA\\\\Documents\\\\GitHub\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  onGetBooks\n}) => {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLaoding] = useState(false);\n\n  const handleSearch = event => {\n    setWord(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(search);\n\n    const doIt = async () => {\n      if (!isLoading) {\n        try {\n          if (search === \"\") {\n            setResults([]);\n          }\n\n          const response = await search(word);\n\n          if (response) {\n            console.log(response);\n            setResults(response);\n          } else {\n            throw Error;\n          }\n        } catch (e) {\n          console.log(e);\n        } finally {\n          onGetBooks(results);\n          setIsLaoding(false);\n        }\n      }\n    };\n\n    doIt();\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books-input-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: word,\n      onChange: handleSearch,\n      type: \"text\",\n      placeholder: \"Search by title, author, or ISBN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"R82NZ66Q/0pw8wnQY3JmS8x370A=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/MMA/Documents/GitHub/nd0191-c1-myreads/starter/src/components/SearchBar.js"],"names":["useState","useEffect","search","SearchBar","onGetBooks","word","setWord","results","setResults","isLoading","setIsLaoding","handleSearch","event","target","value","console","log","doIt","response","Error","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,aAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;;AAGA,UAAMe,IAAI,GAAG,YAAY;AACvB,UAAG,CAACR,SAAJ,EAAc;AACd,YAAI;AACF,cAAIP,MAAM,KAAK,EAAf,EAAmB;AACjBM,YAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,gBAAMU,QAAQ,GAAG,MAAMhB,MAAM,CAACG,IAAD,CAA7B;;AACA,cAAIa,QAAJ,EAAc;AACZH,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAV,YAAAA,UAAU,CAACU,QAAD,CAAV;AACD,WAHD,MAGO;AACL,kBAAMC,KAAN;AAED;AACF,SAbD,CAaE,OAAOC,CAAP,EAAU;AAEVL,UAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACD,SAhBD,SAgBQ;AACNhB,UAAAA,UAAU,CAACG,OAAD,CAAV;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;AACA,KAvBD;;AAyBAO,IAAAA,IAAI;AAEL,GA/BQ,EA+BN,CAACZ,IAAD,CA/BM,CAAT;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACE;AACE,MAAA,KAAK,EAAEA,IADT;AAEE,MAAA,QAAQ,EAAEM,YAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApDD;;GAAMR,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { search } from \"../BooksAPI\";\r\n\r\nconst SearchBar = ({ onGetBooks }) => {\r\n  const [word, setWord] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLaoding] = useState(false);\r\n\r\n  const handleSearch = (event) => {\r\n    setWord(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    console.log(search);\r\n    \r\n\r\n    const doIt = async () => {\r\n      if(!isLoading){\r\n      try {\r\n        if (search === \"\") {\r\n          setResults([]);\r\n        }\r\n        \r\n        const response = await search(word);\r\n        if (response) {\r\n          console.log(response);\r\n          setResults(response);\r\n        } else {\r\n          throw Error;\r\n          \r\n        }\r\n      } catch (e) {\r\n        \r\n        console.log(e);\r\n      }finally{\r\n        onGetBooks(results);\r\n        setIsLaoding(false)\r\n      }\r\n    }\r\n    };\r\n\r\n    doIt();\r\n    \r\n  }, [word]);\r\n  \r\n\r\n  return (\r\n    <div className=\"search-books-input-wrapper\">\r\n      <input\r\n        value={word}\r\n        onChange={handleSearch}\r\n        type=\"text\"\r\n        placeholder=\"Search by title, author, or ISBN\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}