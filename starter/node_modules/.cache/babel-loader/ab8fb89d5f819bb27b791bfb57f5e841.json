{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MMA\\\\Documents\\\\GitHub\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  onGetBooks\n}) => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(search);\n\n    const doIt = async () => {\n      try {\n        if (search === \"\") {\n          setResults([]);\n        }\n\n        const response = await search(search);\n\n        if (response !== undefined) {\n          console.log(response);\n          setResults(response);\n        } else {\n          throw Error;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    doIt();\n    onGetBooks(results);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books-input-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      onChange: handleSearch,\n      type: \"text\",\n      placeholder: \"Search by title, author, or ISBN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"Hilk4AkN5f3+myeGML01Dfh5F0Q=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/MMA/Documents/GitHub/nd0191-c1-myreads/starter/src/components/SearchBar.js"],"names":["useState","useEffect","search","SearchBar","onGetBooks","setSearch","results","setResults","handleSearch","event","target","value","console","log","doIt","response","undefined","Error","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,aAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACpC,QAAM,CAACF,MAAD,EAASG,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;;AAGA,UAAMY,IAAI,GAAG,YAAY;AACvB,UAAI;AACF,YAAIZ,MAAM,KAAK,EAAf,EAAmB;AACjBK,UAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,cAAMQ,QAAQ,GAAG,MAAMb,MAAM,CAACA,MAAD,CAA7B;;AACA,YAAIa,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAR,UAAAA,UAAU,CAACQ,QAAD,CAAV;AACD,SAHD,MAGO;AACL,gBAAME,KAAN;AACD;AACF,OAZD,CAYE,OAAOC,CAAP,EAAU;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACD;AACF,KAhBD;;AAkBAJ,IAAAA,IAAI;AACJV,IAAAA,UAAU,CAACE,OAAD,CAAV;AACD,GAxBQ,EAwBN,CAACJ,MAAD,CAxBM,CAAT;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACE;AACE,MAAA,KAAK,EAAEA,MADT;AAEE,MAAA,QAAQ,EAAEM,YAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3CD;;GAAML,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { search } from \"../BooksAPI\";\r\n\r\nconst SearchBar = ({ onGetBooks }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const handleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    console.log(search);\r\n    \r\n\r\n    const doIt = async () => {\r\n      try {\r\n        if (search === \"\") {\r\n          setResults([]);\r\n        }\r\n        \r\n        const response = await search(search);\r\n        if (response !== undefined) {\r\n          console.log(response);\r\n          setResults(response);\r\n        } else {\r\n          throw Error;\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    doIt();\r\n    onGetBooks(results);\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"search-books-input-wrapper\">\r\n      <input\r\n        value={search}\r\n        onChange={handleSearch}\r\n        type=\"text\"\r\n        placeholder=\"Search by title, author, or ISBN\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}